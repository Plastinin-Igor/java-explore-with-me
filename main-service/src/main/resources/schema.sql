-- public.categories definition

-- Drop table

-- DROP TABLE categories;

CREATE TABLE IF NOT EXISTS categories (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, -- Идентификатор категории
	name varchar(50) NOT NULL, -- Название категории
	CONSTRAINT categories_pk PRIMARY KEY (id)
);
COMMENT ON TABLE categories IS 'Категории';

-- Column comments

COMMENT ON COLUMN categories.id IS 'Идентификатор категории';
COMMENT ON COLUMN categories.name IS 'Название категории';


-- compilations definition

-- Drop table

-- DROP TABLE compilations;

CREATE TABLE IF NOT EXISTS compilations (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, -- Идентификатор подборки
	pinned bool DEFAULT false NOT NULL, -- Закреплена ли подборка на главной странице сайта
	title varchar(50) NOT NULL, -- Заголовок подборки
	CONSTRAINT compilations_pk PRIMARY KEY (id)
);
COMMENT ON TABLE compilations IS 'Подборка событий';

-- Column comments

COMMENT ON COLUMN compilations.id IS 'Идентификатор подборки';
COMMENT ON COLUMN compilations.pinned IS 'Закреплена ли подборка на главной странице сайта';
COMMENT ON COLUMN compilations.title IS 'Заголовок подборки';


-- locations definition

-- Drop table

-- DROP TABLE locations;

CREATE TABLE IF NOT EXISTS locations (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	lat float NOT NULL, -- Широта
	lon float NOT NULL, -- Долгота
	descriptin varchar(150) NULL, -- Описание локации
	CONSTRAINT locations_pk PRIMARY KEY (id)
);

-- Column comments

COMMENT ON COLUMN locations.lat IS 'Широта';
COMMENT ON COLUMN locations.lon IS 'Долгота';
COMMENT ON COLUMN locations.descriptin IS 'Описание локации';


-- users definition

-- Drop table

-- DROP TABLE users;

CREATE TABLE IF NOT EXISTS users (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, -- Идентификатор
	email varchar(254) NOT NULL, -- Почтовый адрес
	name varchar(250) NOT NULL, -- Имя
	CONSTRAINT users_pk PRIMARY KEY (id)
);
COMMENT ON TABLE users IS 'Пользователи';

-- Column comments

COMMENT ON COLUMN users.id IS 'Идентификатор';
COMMENT ON COLUMN users.email IS 'Почтовый адрес';
COMMENT ON COLUMN users.name IS 'Имя';


-- events definition

-- Drop table

-- DROP TABLE events;

CREATE TABLE IF NOT EXISTS events (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, -- Идентификатор события
	annotation varchar(2000) NOT NULL, -- Краткое описание события
	category BIGINT NOT NULL, -- id категории к которой относится событие
	description varchar(7000) NOT NULL, -- Полное описание события
	event_date timestamp NOT NULL, -- Дата и время на которые намечено событие. Дата и время указываются в формате "yyyy-MM-dd HH:mm:ss"
	location BIGINT NOT NULL, -- Широта и долгота места проведения события
	paid bool DEFAULT false NULL, -- Нужно ли оплачивать участие в событии
	participant_limit BIGINT DEFAULT 0 NULL, -- Ограничение на количество участников. Значение 0 - означает отсутствие ограничения
	request_moderation bool DEFAULT true NULL, -- Нужна ли пре-модерация заявок на участие. Если true, то все заявки будут ожидать подтверждения инициатором события. Если false - то будут подтверждаться автоматически
	title varchar(120) NOT NULL, -- Заголовок события
	created_on timestamp NOT NULL, -- Дата и время создания записи события
	initiator BIGINT NOT NULL, -- Пользователь
	published_on timestamp NULL, -- Дата и время публикации события (в формате "yyyy-MM-dd HH:mm:ss")
	state varchar(15) NULL, -- Список состояний жизненного цикла события PENDING, PUBLISHED, CANCELED
	"views" BIGINT DEFAULT 0 NULL, -- Количество просмотрев события
	CONSTRAINT events_pk PRIMARY KEY (id),
	CONSTRAINT events_categories_fk FOREIGN KEY (category) REFERENCES categories(id),
	CONSTRAINT events_locations_fk FOREIGN KEY (location) REFERENCES locations(id),
	CONSTRAINT events_users_fk FOREIGN KEY (initiator) REFERENCES users(id)
);
COMMENT ON TABLE events IS 'Событие';

-- Column comments

COMMENT ON COLUMN events.id IS 'Идентификатор события';
COMMENT ON COLUMN events.annotation IS 'Краткое описание события';
COMMENT ON COLUMN events.category IS 'id категории к которой относится событие';
COMMENT ON COLUMN events.description IS 'Полное описание события';
COMMENT ON COLUMN events.event_date IS 'Дата и время на которые намечено событие. Дата и время указываются в формате "yyyy-MM-dd HH:mm:ss"';
COMMENT ON COLUMN events.location IS 'Широта и долгота места проведения события';
COMMENT ON COLUMN events.paid IS 'Нужно ли оплачивать участие в событии';
COMMENT ON COLUMN events.participant_limit IS 'Ограничение на количество участников. Значение 0 - означает отсутствие ограничения';
COMMENT ON COLUMN events.request_moderation IS 'Нужна ли пре-модерация заявок на участие. Если true, то все заявки будут ожидать подтверждения инициатором события. Если false - то будут подтверждаться автоматически';
COMMENT ON COLUMN events.title IS 'Заголовок события';
COMMENT ON COLUMN events.created_on IS 'Дата и время создания записи события';
COMMENT ON COLUMN events.initiator IS 'Пользователь';
COMMENT ON COLUMN events.published_on IS 'Дата и время публикации события (в формате "yyyy-MM-dd HH:mm:ss")';
COMMENT ON COLUMN events.state IS 'Список состояний жизненного цикла события PENDING, PUBLISHED, CANCELED';
COMMENT ON COLUMN events."views" IS 'Количество просмотрев события';


-- participation_request definition

-- Drop table

-- DROP TABLE participation_request;

CREATE TABLE IF NOT EXISTS participation_request (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, -- Идентификатор заявки
	created timestamp NOT NULL, -- Дата и время создания заявки
	event BIGINT NOT NULL, -- Идентификатор события
	requester BIGINT NOT NULL, -- Идентификатор пользователя, отправившего заявку
	status varchar(15) NOT NULL, -- Статус заявки
	CONSTRAINT requests_pk PRIMARY KEY (id),
	CONSTRAINT requests_events_fk FOREIGN KEY (event) REFERENCES events(id),
	CONSTRAINT requests_users_fk FOREIGN KEY (requester) REFERENCES users(id)
);

-- Column comments

COMMENT ON COLUMN participation_request.id IS 'Идентификатор заявки';
COMMENT ON COLUMN participation_request.created IS 'Дата и время создания заявки';
COMMENT ON COLUMN participation_request.event IS 'Идентификатор события';
COMMENT ON COLUMN participation_request.requester IS 'Идентификатор пользователя, отправившего заявку';
COMMENT ON COLUMN participation_request.status IS 'Статус заявки';


-- compilation_events definition

-- Drop table

-- DROP TABLE compilation_events;

CREATE TABLE IF NOT EXISTS compilation_events (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, -- Идентификатор списка
	compilation_id BIGINT NOT NULL, -- Подборка
	event_id BIGINT NOT NULL, -- Событие
	CONSTRAINT compilation_events_pk PRIMARY KEY (id),
	CONSTRAINT compilation_events_compilations_fk FOREIGN KEY (compilation_id) REFERENCES compilations(id),
	CONSTRAINT compilation_events_events_fk FOREIGN KEY (event_id) REFERENCES events(id)
);
COMMENT ON TABLE compilation_events IS 'Список идентификаторов событий входящих в подборку';

-- Column comments

COMMENT ON COLUMN compilation_events.id IS 'Идентификатор списка';
COMMENT ON COLUMN compilation_events.compilation_id IS 'Подборка';
COMMENT ON COLUMN compilation_events.event_id IS 'Событие';